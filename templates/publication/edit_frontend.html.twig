{% extends 'base.html.twig' %}

{% block title %}Carint - Edit Publication{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
{% endblock %}

{% block form_theme %}
    {% form_theme form _self %}
{% endblock %}

{% block styles %}
    <style>
        .publication-form {
            max-width: 900px;
            margin: 0 auto;
            padding: 24px;
            background: #ffffff;
            border-radius: 12px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
            font-family: 'Inter', sans-serif;
        }

        .publication-form .form-group {
            margin-bottom: 28px;
        }

        .publication-form label {
            font-weight: 600;
            color: #1a202c;
            font-size: 15px;
            margin-bottom: 10px;
            display: block;
        }

        .publication-form .form-control {
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            padding: 14px 16px;
            font-size: 15px;
            color: #2d3748;
            background: #f7fafc;
            transition: all 0.3s ease;
            width: 100%;
            box-sizing: border-box;
        }

        .publication-form .form-control:focus {
            border-color: #4299e1;
            box-shadow: 0 0 0 4px rgba(66, 153, 225, 0.15);
            background: #ffffff;
            outline: none;
        }

        .publication-form .form-control::placeholder {
            color: #a0aec0;
            font-style: italic;
        }

        .publication-form select.form-control {
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%233b4a5e' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 16px center;
            background-size: 20px;
            padding-right: 48px;
            color: #2d3748;
            height: 48px;
            line-height: 1.5;
        }

        .publication-form select.form-control option {
            color: #2d3748;
            background: #ffffff;
            font-size: 15px;
        }

        .publication-form select.form-control:invalid {
            color: #a0aec0;
        }

        .publication-form textarea.form-control {
            resize: vertical;
            min-height: 140px;
            max-height: 400px;
            border-radius: 12px;
        }

        .publication-form .form-control-file {
            border: 1px dashed #cbd5e0;
            border-radius: 8px;
            padding: 12px;
            background: #edf2f7;
            font-size: 14px;
            color: #4a5568;
            width: 100%;
            transition: border-color 0.3s ease;
        }

        .publication-form .form-control-file:hover {
            border-color: #a0aec0;
        }

        .publication-form .form-control-file:focus {
            border-color: #4299e1;
            outline: none;
        }

        .publication-form .btn-primary {
            background: linear-gradient(135deg, #4299e1 0%, #2b6cb0 100%);
            border: none;
            border-radius: 8px;
            padding: 14px 28px;
            font-size: 15px;
            font-weight: 600;
            color: #ffffff;
            transition: all 0.3s ease;
            margin-top: 24px;
        }

        .publication-form .btn-primary:hover {
            background: linear-gradient(135deg, #5aabe6 0%, #2c5282 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(66, 153, 225, 0.3);
        }

        .publication-form .btn-primary:active {
            transform: translateY(0);
            box-shadow: none;
        }

        .publication-form .btn-secondary {
            background: #6b7280;
            border: none;
            border-radius: 8px;
            padding: 14px 28px;
            font-size: 15px;
            font-weight: 600;
            color: #ffffff;
            transition: all 0.3s ease;
            margin-top: 24px;
        }

        .publication-form .btn-secondary:hover {
            background: #4b5563;
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(75, 85, 99, 0.3);
        }

        .publication-form .form-error-message,
        .publication-form .is-invalid .form-control,
        .publication-form .is-invalid .invalid-feedback {
            all: unset;
        }

        .publication-form .alert {
            margin-bottom: 20px;
        }

        .publication-form .form-error {
            color: #dc3545;
            font-size: 0.9rem;
            margin-top: 5px;
        }

        @media (max-width: 768px) {
            .publication-form {
                padding: 20px;
            }

            .publication-form .form-control,
            .publication-form select.form-control {
                font-size: 14px;
                padding: 12px 14px;
                height: 44px;
            }

            .publication-form .btn-primary,
            .publication-form .btn-secondary {
                padding: 12px 24px;
                font-size: 14px;
            }
        }

        @media (max-width: 576px) {
            .publication-form {
                padding: 16px;
            }
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container py-4">
        <h1 class="text-center mb-5 fw-bold" style="color: #4299e1;">Edit Publication</h1>

        <div class="publication-form">
            {% for flash_error in app.flashes('error') %}
                <div class="alert alert-danger">{{ flash_error }}</div>
            {% endfor %}
            {% for flash_success in app.flashes('success') %}
                <div class="alert alert-success">{{ flash_success }}</div>
            {% endfor %}

            {% if form.vars.errors|length > 0 %}
                <div class="alert alert-danger">
                    Please correct the errors below:
                    <ul>
                        {% for error in form.vars.errors %}
                            <li>{{ error.message }}</li>
                        {% endfor %}
                    </ul>
                </div>
            {% endif %}

            {% if publication %}
                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate', 'id': 'edit-publication-form', 'action': path('edit_publication', {'id_publication': publication.idPublication})}}) }}
                    <div class="row">
                        <div class="col-md-6 form-group">
                            {{ form_label(form.title, 'Title') }}
                            {{ form_widget(form.title, {'attr': {'class': 'form-control', 'placeholder': 'Enter title'}}) }}
                            {{ form_errors(form.title, {'attr': {'class': 'form-error'}}) }}
                        </div>
                        <div class="col-md-6 form-group">
                            {{ form_label(form.category, 'Category') }}
                            {{ form_widget(form.category, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.category, {'attr': {'class': 'form-error'}}) }}
                        </div>
                    </div>

                    <div class="form-group">
                        {{ form_label(form.contenu, 'Content') }}
                        {{ form_widget(form.contenu, {'attr': {'class': 'form-control', 'rows': '6', 'placeholder': 'Share your thoughts...'}}) }}
                        {{ form_errors(form.contenu, {'attr': {'class': 'form-error'}}) }}
                    </div>

                    <div class="row">
                        <div class="col-md-6 form-group">
                            {{ form_label(form.image, 'Image (PNG, JPEG, optional)') }}
                            {{ form_widget(form.image, {'attr': {'class': 'form-control-file'}}) }}
                            {{ form_errors(form.image, {'attr': {'class': 'form-error'}}) }}
                            {% if publication.image %}
                                <div class="mt-2">
                                    <small>Current image: <a href="{{ asset('Uploads/publications/' ~ publication.image) }}" target="_blank">{{ publication.image }}</a></small>
                                </div>
                            {% endif %}
                        </div>
                    </div>

                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-primary">
                            <i class="fa fa-save me-2"></i>Save Changes
                        </button>
                        <a href="{{ path('landing_service') }}" class="btn btn-secondary">
                            <i class="fa fa-times me-2"></i>Cancel
                        </a>
                    </div>
                {{ form_end(form) }}
            {% else %}
                <div class="alert alert-danger">Publication not found.</div>
            {% endif %}
        </div>
    </div>

    <audio id="notification-sound" src="{{ asset('sounds/notification.mp3') }}" preload="auto"></audio>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof jQuery === 'undefined') {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'jQuery is not loaded. Please check the base template.'
                });
                return;
            }

            const $ = jQuery;

            // Debounce utility function
            function debounce(func, wait) {
                let timeout;
                return function executedFunction(...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func(...args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }

            // Initialize components
            function initializeComponents() {
                console.log('Initialized edit form');
            }

            // Setup event handlers
            function setupEventHandlers() {
                $('#edit-publication-form').on('submit', function(e) {
                    e.preventDefault();
                    const form = $(this);
                    const formData = new FormData(this);
                    const submitButton = form.find('button[type="submit"]');
                    const actionUrl = form.attr('action');

                    // Client-side validation
                    if (!form[0].checkValidity()) {
                        form[0].reportValidity();
                        Swal.fire({
                            icon: 'warning',
                            title: 'Incomplete Form',
                            text: 'Please fill in all required fields.'
                        });
                        return;
                    }

                    $.ajax({
                        url: actionUrl,
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        beforeSend: function() {
                            submitButton.prop('disabled', true).text('Saving...');
                        },
                        success: function(response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Publication Updated!',
                                    text: 'Your changes have been saved successfully.',
                                    timer: 3000
                                });

                                const sound = document.getElementById('notification-sound');
                                sound.play().catch(error => console.warn('Sound playback failed:', error));

                                setTimeout(() => {
                                    window.location.href = response.redirect || '{{ path('landing_service') }}';
                                }, 2000);
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: response.message || 'An unexpected error occurred.'
                                });
                            }
                        },
                        error: function(xhr) {
                            let errorMessage = 'Failed to update publication.';
                            try {
                                const response = JSON.parse(xhr.responseText);
                                errorMessage = response.message || `Server error: ${xhr.status}`;
                            } catch (e) {
                                errorMessage = `Server error: ${xhr.status}`;
                            }
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: errorMessage
                            });
                        },
                        complete: function() {
                            submitButton.prop('disabled', false).text('Save Changes');
                        }
                    });
                });
            }

            initializeComponents();
            setupEventHandlers();
        });
    </script>
{% endblock %}